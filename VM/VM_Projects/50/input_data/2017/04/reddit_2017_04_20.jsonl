{"title": "My Project to Beat the Dow", "selftext": "I'm working on a project. I try to beat the Dow. Every week I select stocks from the Dow (usually 1-10 stocks) that I think will beat the Dow. This week it's WMT and XOM, last week  was XOM and NKE, you get the idea. I select stocks using a machine learning algorithm I created (engineering undergrad, compsci masters, interned as a quantitative analyst). It can make predictions for any arbitrary portfolio, but people care about the Dow.\n\nThere's a more in depth explanation on my blog, please check it out:\n\nhttps://beatthedowbyacow.com/\n\nIt's a time-stamped log of all my stock predictions, and a plot of my performance compared to the Dow. It should give you some idea of what I do. You can use the blog to copy my trades in your own portfolio - hypothetically! don't do this! entertainment only etc. - because predictions for Monday mornings are always posted Sunday nights. It's only 6 months of data, but it's all verifiable in an interactive brokers account. I have another 6 months of paper trading data (unverifiable unfortunately) that can be prepended to the graphs.\n\nI've put a lot of work into developing the algorithm. Let me know what you guys think. Is there an appetite for this kind of thing? Either for use in a fund, or some other financial institution?\n\n*EDIT* Heads up iOS users, the graphs don't seem to display properly in iOS safari (OS X safari is fine).", "id": "66e8hf", "created_utc": 1492647440.0, "score": 115, "upvote_ratio": 0.9, "num_comments": 54, "comments": [{"body": "Recommendation for the graph: You should color each point green/red based on whether or not it beat the dow that week.", "score": 12, "replies": [{"body": "Good idea", "score": 2, "replies": []}]}, {"body": "Cool project! Definitely going to follow! ", "score": 11, "replies": [{"body": "Thank you :). Check for predictions every Sunday night! They're are always posted before Monday market open. Happy to answer questions if you have any.  ", "score": 3, "replies": []}]}, {"body": "What your investment thesis around your algorithm? ", "score": 7, "replies": [{"body": "I'm going to try to answer without giving away the secret sauce.\nThe algorithm is a fairly sophisticated machine learning process; it's not some simple trick or simple list algorithm (these aren't technical terms). Simple trick like, for example, from some stock universe always buy stocks with returns in the top decile (top 10%) over the past 6 weeks and just reevaluate which stocks qualify over the weekend - this would be a sort of simple momentum strategy. A simple list would be like, from some stock universe select stocks that have P/E, 6-week momentum, and dividends all in the top decile - this would be a sort of simple momentum and fundamental strategy. Both of these types of strategies have their place in the world, and some of them work surprisingly well, but they have lots of issues in my opinion.\n\nFor starters, my analysis suggests they have issues with consistency, and they randomly just stop working forever sometimes. They owe a lot to survivorship bias. They have a feature set that's set in stone. Although, for example, 6-week momentum can sometimes be very predictive, there are long periods when it isn't, and if you can't validate your feature set/swap working features in and out, you could be missing out on some solid predictive data. In my experience, there are no features that just always work, or even always work in January or something like that. So I do feature validation during model training.\n\nAnother trap people tend to fall into is \"the curse of dimensionality\" (look it up, it's a real thing, and a real curse). Basically, it's when you have too many features. The amount of data you need to cover your space grows exponentially as a function of number of dimensions. So even if you have a feature set with a lot of predictive data, an algorithm may have trouble turning that into a predictive model if there's just too many features. Throwing as many features as possible at an algorithm seems like a natural thing to do, because no one really knows what's predictive in the stock market, so if you just throw everything at your model something good's gotta be in there right? Sorry, you can't do this. I suspect some people use principal component analysis to deal with this if they want to keep all of their data (I haven't met anyone personally who does this). However, PCA reduces dimensionality by finding dimensions that maximize variance, which is not always the predictive characteristic in your data, and in my experience PCA isn't the silver bullet some make it out to be, so this isn't the method I use. Okay so just extend my training period as far back as possible (1960s perhaps?) and that should give me enough data to do whatever I want right? This is a nice prelude into the next issue...\n\nThe stock market is a non iid system (look up \"iid\"). It's non-stationary. The rules of the game are constantly changing. It's not like a database of faces from 1950 which could still be used to train a neural network today. A lot of people think more data is always better, so a lot of models end up training on data that's way too old to be relevant. Data goes stale after a while. You can only look back so far before looking further does more harm than good to the model. This is my opinion, and my analysis supports it, so I'm very deliberate in selecting my training period. The non iid thing makes things way harder.\n\nI'm talking about data a lot because a very significant chunk of the algorithm is data pre-processing.\n\nAnother thing I do is retrain all the time; every week. Data gets stale, and model parameters get stale. Lots of active funds train a regression model once, and it works for a while, then it stops working. People, retrain your models often!\n\nOkay, that should tell you a bit about the challenges of making a quantitative model. Now lets talk about what I optimized my model to do: my investment thesis around the algorithm.\nI created a rock solid back-test platform. If I make predictions for 2 months in real time, then back test over that period, my test matches the predictions I made (I say this because I did this as a sanity check). I used the back-test to design the algorithm to have two main characteristics: 1. beat the Dow by a lot, 2. consistency. Consistency is really important. If you can do *anything* in the stock market consistently, you've got something worth money. No one cares if you can demonstrate a back test where you beat the Dow by 15% in 2011 and underperformed every other year. You need to be consistent over a long period, and your real trade performance needs to match your back test performance. That's my philosophy, and so far as I can tell, that's what I've done.", "score": 20, "replies": [{"body": "I think your algo should \"worry\" about oil companies (like XOM) with PE's higher than Google's", "score": 2, "replies": []}, {"body": "how do you go around the issues of non stationarity?", "score": 1, "replies": [{"body": "Feature validation step.", "score": 1, "replies": [{"body": "what kind of model are you using for this time series? an ARDL, ARCH, VAR, etc.?", "score": 1, "replies": []}]}]}, {"body": "I feel like you're talking gibberish", "score": 0, "replies": [{"body": "Sorry, I don't want to be too specific about what I did because I don't want to give away the algorithm.", "score": 2, "replies": [{"body": "LOL you think people would rip off your algorithm?   ", "score": 1, "replies": []}]}, {"body": "what's gibberish, made sense to \n me?", "score": 1, "replies": [{"body": "What's his investment thesis?", "score": 1, "replies": [{"body": "Ah yeah, he didn't divulge that. I meant to say his critique of existing investing strategies makes sense to me.", "score": 1, "replies": []}]}]}]}]}]}, {"body": "Let me be the first to pitch in with substantive information: What you're doing here will blow up in your face (I know this isn't with real money), what you're doing is essentially educated gambling. If you look at the graph alone it has a gap of about 6.5%, and if you look at your biggest jump it's 6%. So you're pretty much trailing the market except for One trade.\n\nThe same will happen again, definitely, but it can be mirrored and you lose 6%. Do you understand what I'm trying to say here? It's like day trading with 3x Leveraged ETFs, You make 10%, then 10% again, then again, and again, then you lose 40%, then you lose an extra 20%, etc.\n\nObviously it has potential, but when it comes to 'actual' investing, it's not viable.", "score": 7, "replies": [{"body": "You need to re-calibrate your zero risk position to be the Dow, that's part of how the algorithm is optimized. As far as I'm concerned, if the Dow goes down 10% and I go down 8% that's a win, because over time this works. The 6% jump is Trump's election night. The Dow jumped a lot that week, and I'm okay with that. The gap is more like 8% (numbers are in the charts section); I'm beating the Dow by 8% over the last 6 months. The algorithm is designed to beat the Dow by a small margin every week. The first 3 months or so were pretty slow, but the most recent 3 months have been very good and demonstrate steady outperformance. Keep in mind, I started this blog because I already had 6 months of very good paper trading data, so as it stands there's a full year of steady outperformance (but you only have to believe the last 6 months). By the way, quantitative analysis *is* \"educated gambling\".", "score": 6, "replies": [{"body": "All trading is educated gambling, where the amount of education can very wildly. Sure things are for the SEC.", "score": 3, "replies": [{"body": "So stock brokers are just educated gamblers. And warren buffet is one of the best educated gamblers? Lol ", "score": 2, "replies": []}, {"body": "Unless you're insider trading, it's not gambling then.\n\n\nWell, it's gambling with the law, but I wouldn't consider the actual trade itself to be gambling if are privvy to non-public information.", "score": 1, "replies": []}]}, {"body": "How does this work when you factor in transaction costs and friction? I think that performance could degrade pretty quickly.  ", "score": 1, "replies": [{"body": "Transaction costs aren't really an issue, especially if you use a discount broker. you need to invest about 5-10k for the algorithm to work properly.", "score": 1, "replies": [{"body": "That answers half the question. Execution is critical for high turnover strategies. ", "score": 1, "replies": [{"body": "I address this in a response to a similar question.", "score": 1, "replies": []}]}]}]}, {"body": ">I'm beating the Dow by 8% over the last 6 months.\n\nAbsolutely, I'm not denying that. But what I am saying is that the same way it went up 6% that day, it can- and eventually will- go down by the same amount.\n\n\n>quantitative analysis is \"educated gambling\".\n\nEh, I'd say that's a grey area. It's educated gambling up to a point, if you analyze a company's earnings for the past 10 years, and then make a trade off of that, that's educated gambling. But What **isn't** educated gambling in the stock market?\n\nEverything can be pointing to a direction, but it ends up going to the wrong direction. Unless you're investing for voting power, every 'trade' is just an educated gamble.\n", "score": 1, "replies": []}, {"body": "Keep in mind, these are Dow stocks, not gold or oil or some penny stock, the Dow is pretty stable. You're not taking on huge risk by buying a subset of the Dow. Constructing an appropriate stock universe is part of the portfolio optimization problem, and the Dow is well behaved.", "score": 1, "replies": []}]}]}, {"body": "Really like this... and definitely the direction i want to head towards next in my trading career. Ignoring the good (but short) results, well done!\n\nFor a hack/old skill programmer who has plenty of trading experience, what path would you suggest to build up the skills required to do something similar?\n\nCurrently i'm fluent with excel/vba and slowly learning R to move a lot of my analysis and backtesting to R (using packages such as quantstrat). Recently a lot of the ML tutorials / examples i've seen online use Python. Without getting into an R vs Python debate would you recommend one over the other? And anything you would you suggest to learn ML specifically for trading strategies.", "score": 5, "replies": [{"body": "Also keen to hear the answer to this ", "score": 2, "replies": []}, {"body": "Great question :) I'll respond with my opinion before the end of the day.", "score": 1, "replies": []}, {"body": "I recommend starting simple and with a data source you are comfortable with. I started out making automated bitcoin trades using BTCC and scraping data from bitcoincharts.com. That project is actually what got me an internship as a quant, and what I learned by trying to beat the bitcoin market eventually evolved into what I'm doing today.\n\nStart by trying a single factor model, and just go from there. Some single factor models work surprisingly well. Make sure you develop a strong back test strategy and verify that it works. Be very careful about look ahead bias - it's deceptively subtle. Do everything you can to convince yourself your back test and your predictions do the same thing over the same period. You'll have to make predictions, then wait like a day or a month or whatever then run your back test over the same period you had made your predictions to make sure they match. That's a strong check in my opinion.\n\nR is a good resource, and it's free. However, I'm a big fan of Matlab because they have really amazing documentation with lots of example code. If you're starting out and you're not at some university or institution with a prof or CS buddy, python can be a little hard to navigate. Don't get me wrong, Python has a lot of great ML packages and examples, but with Matlab they're all in one place (Matlab's website). That's just my personal opinion. I'm half way through a CS masters now, but my undergrad was in engineering, so Matlab is my first language and I might be a little biased.\n\nLet me know if this answers your question, or if you have any more questions.", "score": 1, "replies": []}]}, {"body": "Very cool! I've bookmarked to follow.  ", "score": 3, "replies": []}, {"body": "Is your algo based on TA?", "score": 2, "replies": []}, {"body": "What do you think about the flaws of the Dow index (namely that it is share price weighted) and how do you think it might affect the benchmark you are using?", "score": 2, "replies": []}, {"body": "I'm not an algo trader by any stretch of the imagination, but isn't weekly rebalancing really short?\n\nI know that IB has relatively low commissions but why didn't you opt for say monthly rebalancing or every other week?", "score": 2, "replies": [{"body": "I use a weekly trading schedule so I can get enough fresh data to train my algorithm properly. Monthly gives you 12 data points per year per stock, and that's just not enough. Check out that huge response I made about my investment thesis.", "score": 3, "replies": [{"body": "I sort of understand what you're saying however even if you rebalance weekly, you're given around 52 data points per stock. 52, while almost 4x more than monthly, is still not a large number.\n\nIf you're feeding it only 52 data points, that seems really really lacking. Similar to the way out of 10 coin tosses, you might get heads 7 times, but with more iterations it approaches 50/50.\n\nI'm sure there're many things I'm missing but from the way you say \"Monthly gives you 12 data points per year per stock, and that's just not enough.\" it makes it seem as though you're only using weekly data. In that case, I'd argue that even 52 data points is pretty sparse...", "score": 2, "replies": []}]}]}, {"body": "I was actually planning to start something pretty similar to this! ", "score": 1, "replies": [{"body": "Are you a programmer? ", "score": 1, "replies": []}]}, {"body": "[deleted]", "score": 1, "replies": [{"body": "Monday morning to Monday morning. Check the \"About\" section.", "score": 2, "replies": [{"body": "[deleted]", "score": 1, "replies": [{"body": "Don't try it! Entertainment Only! I can't be responsible if anything goes wrong at this point.", "score": 1, "replies": []}]}]}]}, {"body": "Cool project but comparing overall returns is not exactly apples to apples. Are transaction costs and capital gains taxes included in your performance assessment? What about slippage when buying and selling the stocks? You'll also have to consider the max drawdown and the Sharpe ratio. Since you are only selecting two to three stocks, you are risking a lot for a relative small boost. The alpha is stocks portfolio mainly comes from position size and risk management. ", "score": 1, "replies": [{"body": "I am actually trading with this algorithm, and my performance matches theoretical performance almost exactly. Transaction costs aren't a big deal - I'm using interactive brokers. Capital gains tax is not included in graphs, and would definitely take some of your profit, but it does this to every portfolio so the algorithm will still outperform. Slippage? You think I'm going to move XOM? In my experience over the past 6 months I always buy stocks within 1 cent of their open price. Remember, the Dow is huge, these aren't penny stocks so theoretical performance is very close to actual performance unless you are trading 100mil+. You need to earn your complexity. The graph is simple and meaningful, and meant to be reproduced by anyone who wants to. Max drawdown is an issue too, and yes I've calculated all of these things and factored them into the model, they're just not listed on the website, I'll add more analysis if there is demand for it. So far for the year (6 months paper-trading plus the 6 months shown) my Sharpe ratio is 3.32, which is very high, it's been a good year and I expect it to approach 2-2.5 as time goes on. I'll talk about position size more later because there is a lot to be said here.\n\n", "score": 2, "replies": []}]}, {"body": "I knew someone that made an algorithm to predict elections. It would search for key words on all social media websites. It predicted that marijuana would be legalized correctly  ", "score": 1, "replies": []}, {"body": "Really cool! Hope you keep up with it for a few years. I will follow it!", "score": 1, "replies": []}, {"body": "Neat", "score": 1, "replies": []}, {"body": "Have you thought about making this strategy market neutral by selling an appropriate amount of futures?\nAnother option would be to use the same algorithm to identify stocks which will underperform and short those alongside your long positions.\n\nAlso interested in why you use equal weights. If your algorithm works and can produce a score-like output, you could use those as weights which should increase your returns if your model works.\n\nEdit: Another interesting point would be the impact of a maximum weight. Allocating 100% of the portfolio to one stock includes way too much idiosyncratic risk. A single adverse, company specific event (think LNKD) can and at some time will pulverize years of gainz (or more). Even a max weight of a single stock of 25% (long or short) still seems risky. If your model does not put out more than 1 or 2 stocks, you could invest the remaining cash in 1-month tbills (and sell those as soon as your model outputs more results in a following week) or leave it in cash.", "score": 1, "replies": [{"body": "Those are good points.\n\nYes I can short lowest ranking stocks in order to hedge my position. But long term returns are lower. I could lower long term returns but gain downside protection by implementing this, but my goal is to beat the Dow and demonstrate I can be predictive; If I can successfully rank stocks in an index over time then a bunch of different strategies can be implemented with that edge. Equal weights because it's easy and it works even if you can only approximately replicate it in real life - earn your complexity. That said, I do want to explore different weightings in the future.\n\nI can change max weight, or even force the algorithm to always pick 10 out of the 30 stocks - this method works reasonably well in my back tests, it outperforms just a little less but the risk profile might be more appealing to some people. My downside protection is essentially membership in the Dow. I wouldn't take this much risk in the S&P 500.", "score": 1, "replies": []}]}, {"body": "My prediction for next week will be posted before midnight tonight (Eastern Time Zone UTC-05:00)", "score": 1, "replies": [{"body": "Posted", "score": 1, "replies": []}]}, {"body": "[deleted]", "score": 1, "replies": [{"body": "I built the algorithm from the ground up. Values inputted into the program? Do you mean like stock data? I don't want to say my data feed, but I can give you some examples: quandl has some good stuff, google and yahoo have decent price data. All kinds of options are out there. If you look for it, most programming languages will have packages for calling data. ", "score": 1, "replies": []}]}, {"body": "Following. Cool idea!", "score": 1, "replies": []}, {"body": "Cool idea for sure. I'm going to follow along and see how your predictions do", "score": 1, "replies": []}]}
